{"version":3,"file":"JsonHubProtocol.js","sourceRoot":"","sources":["../../src/JsonHubProtocol.ts"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,+GAA+G;;AAE/G,yDAAwD;AAG3C,QAAA,sBAAsB,GAAW,MAAM,CAAC;AAErD;IAAA;QAEa,SAAI,GAAW,8BAAsB,CAAC;QAEtC,SAAI,gBAAmC;IAoBpD,CAAC;IAlBG,uCAAa,GAAb,UAAc,KAAa;QACvB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,qBAAqB;QACrB,IAAI,QAAQ,GAAG,qCAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YACvC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAED,sCAAY,GAAZ,UAAa,OAAmB;QAC5B,MAAM,CAAC,qCAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5D,CAAC;IACL,sBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,0CAAe","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { IHubProtocol, ProtocolType, HubMessage } from \"./IHubProtocol\";\r\n\r\nexport const JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n\r\n    readonly type: ProtocolType = ProtocolType.Text;\r\n\r\n    parseMessages(input: string): HubMessage[] {\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        // Parse the messages\r\n        let messages = TextMessageFormat.parse(input);\r\n        let hubMessages = [];\r\n        for (var i = 0; i < messages.length; ++i) {\r\n            hubMessages.push(JSON.parse(messages[i]));\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n}"]}